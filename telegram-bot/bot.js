require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const express = require('express');
const cors = require('cors');
const bodyParser = require('body-parser');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const BOT_TOKEN = process.env.BOT_TOKEN;
const CHAT_ID = process.env.CHAT_ID;
const PORT = process.env.PORT || 3001;
const NODE_ENV = process.env.NODE_ENV || 'development';

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if (!BOT_TOKEN) {
    console.error('‚ùå –û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    console.error('üìù –°–æ–∑–¥–∞–π—Ç–µ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ @BotFather –∏ –¥–æ–±–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –≤ .env —Ñ–∞–π–ª');
    process.exit(1);
}

if (!CHAT_ID) {
    console.error('‚ùå –û—à–∏–±–∫–∞: CHAT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    console.error('üìù –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à chat_id –≤ .env —Ñ–∞–π–ª');
    process.exit(1);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new TelegramBot(BOT_TOKEN, { polling: true });

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Express —Å–µ—Ä–≤–µ—Ä–∞
const app = express();

// Middleware
app.use(cors());
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤
app.use((req, res, next) => {
    if (NODE_ENV === 'development') {
        console.log(`${new Date().toISOString()} - ${req.method} ${req.url}`);
    }
    next();
});

// ======================== TELEGRAM BOT COMMANDS ========================

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    const welcomeMessage = `
üöó *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –ê–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å–ª—É–≥!*

–≠—Ç–æ—Ç –±–æ—Ç –±—É–¥–µ—Ç —É–≤–µ–¥–æ–º–ª—è—Ç—å –≤–∞—Å –æ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–∫–∞—Ö —Å —Å–∞–π—Ç–∞.

üìã *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
/start - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/help - –°–ø—Ä–∞–≤–∫–∞
/status - –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—è–≤–æ–∫

üîî *Chat ID:* \`${chatId}\`
_(–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç ID –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö)_
    `;
    
    bot.sendMessage(chatId, welcomeMessage, { parse_mode: 'Markdown' });
    
    console.log(`üì± –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞: ${msg.from.first_name} (${chatId})`);
});

// –ö–æ–º–∞–Ω–¥–∞ /help
bot.onText(/\/help/, (msg) => {
    const chatId = msg.chat.id;
    const helpMessage = `
üÜò *–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É*

*–§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞:*
‚Ä¢ –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ —Å —Å–∞–π—Ç–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å–ª—É–≥
‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞—Ö
‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∑–∞—è–≤–∫–∞–º

*–¢–∏–ø—ã –∑–∞—è–≤–æ–∫:*
üîπ –ê—Ä–µ–Ω–¥–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
üîπ –õ–∏–∑–∏–Ω–≥ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π  
üîπ –ü–æ–∫—É–ø–∫–∞ –ø–æ–¥ –∫–ª—é—á
üîπ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏

*–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã:*
/start - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
/status - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

üí¨ –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    `;
    
    bot.sendMessage(chatId, helpMessage, { parse_mode: 'Markdown' });
});

// –ö–æ–º–∞–Ω–¥–∞ /status
bot.onText(/\/status/, (msg) => {
    const chatId = msg.chat.id;
    const uptime = process.uptime();
    const uptimeHours = Math.floor(uptime / 3600);
    const uptimeMinutes = Math.floor((uptime % 3600) / 60);
    
    const statusMessage = `
‚úÖ *–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞*

ü§ñ –ë–æ—Ç: –ê–∫—Ç–∏–≤–µ–Ω
‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${uptimeHours}—á ${uptimeMinutes}–º
üåê –°–µ—Ä–≤–µ—Ä: –ó–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}
üìä –ü–∞–º—è—Ç—å: ${Math.round(process.memoryUsage().heapUsed / 1024 / 1024)}MB

üîß –†–µ–∂–∏–º: ${NODE_ENV}
üìÖ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}
    `;
    
    bot.sendMessage(chatId, statusMessage, { parse_mode: 'Markdown' });
});

// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—è–≤–æ–∫ (–ø—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è)
let applicationStats = {
    total: 0,
    rental: 0,
    leasing: 0,
    purchase: 0,
    consultation: 0,
    today: 0,
    lastReset: new Date().toDateString()
};

bot.onText(/\/stats/, (msg) => {
    const chatId = msg.chat.id;
    
    // –°–±—Ä–æ—Å –¥–Ω–µ–≤–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –µ—Å–ª–∏ –Ω–æ–≤—ã–π –¥–µ–Ω—å
    if (applicationStats.lastReset !== new Date().toDateString()) {
        applicationStats.today = 0;
        applicationStats.lastReset = new Date().toDateString();
    }
    
    const statsMessage = `
üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—è–≤–æ–∫*

üìà *–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*
‚Ä¢ –í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫: ${applicationStats.total}
‚Ä¢ –°–µ–≥–æ–¥–Ω—è: ${applicationStats.today}

üìã *–ü–æ —Ç–∏–ø–∞–º —É—Å–ª—É–≥:*
üöó –ê—Ä–µ–Ω–¥–∞: ${applicationStats.rental}
ü§ù –õ–∏–∑–∏–Ω–≥: ${applicationStats.leasing}
üåç –ü–æ–¥ –∫–ª—é—á: ${applicationStats.purchase}
üí¨ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏: ${applicationStats.consultation}

üìÖ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${new Date().toLocaleString('ru-RU')}
    `;
    
    bot.sendMessage(chatId, statsMessage, { parse_mode: 'Markdown' });
});

// ======================== API ENDPOINTS ========================

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ API
app.get('/', (req, res) => {
    res.json({
        status: 'OK',
        message: 'Telegram Bot API –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å–ª—É–≥',
        version: '1.0.0',
        uptime: process.uptime(),
        timestamp: new Date().toISOString()
    });
});

// Endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫ —Å —Å–∞–π—Ç–∞
app.post('/api/application', async (req, res) => {
    try {
        const applicationData = req.body;
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        if (!applicationData || typeof applicationData !== 'object') {
            return res.status(400).json({ 
                error: '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–∫–∏',
                received: typeof applicationData 
            });
        }

        // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è Telegram
        const message = formatApplicationMessage(applicationData);
        
        // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
        await bot.sendMessage(CHAT_ID, message, { 
            parse_mode: 'Markdown',
            disable_web_page_preview: true 
        });
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        updateStats(applicationData);
        
        // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        console.log('üì® –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Telegram:', {
            type: applicationData.service || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ',
            timestamp: new Date().toISOString()
        });
        
        res.json({ 
            success: true, 
            message: '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Telegram',
            timestamp: new Date().toISOString()
        });
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏:', error);
        
        res.status(500).json({ 
            error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞', 
            details: NODE_ENV === 'development' ? error.message : undefined
        });
    }
});

// ======================== HELPER FUNCTIONS ========================

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞—è–≤–∫–µ
function formatApplicationMessage(data) {
    const timestamp = new Date().toLocaleString('ru-RU');
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —É—Å–ª—É–≥–∏ –∏ —ç–º–æ–¥–∑–∏
    const serviceEmojis = {
        '–∞—Ä–µ–Ω–¥–∞': 'üöó',
        '–ª–∏–∑–∏–Ω–≥': 'ü§ù',
        '–ø–æ–¥-–∫–ª—é—á': 'üåç',
        '–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è': 'üí¨'
    };
    
    const serviceType = data.service || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    const emoji = serviceEmojis[serviceType.toLowerCase()] || 'üìã';
    
    let message = `${emoji} *–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê*\n\n`;
    
    // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    message += `üìã *–£—Å–ª—É–≥–∞:* ${serviceType}\n`;
    message += `üë§ *–ò–º—è:* ${data.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n`;
    message += `üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${data.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n`;
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–∞–Ω–Ω—ã—Ö
    if (data.message && data.message.trim()) {
        message += `üí¨ *–°–æ–æ–±—â–µ–Ω–∏–µ:* ${data.message}\n`;
    }
    
    // –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø–æ–ª—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∑–∞—è–≤–æ–∫
    if (data['–ö–ª–∞—Å—Å –∞–≤—Ç–æ–º–æ–±–∏–ª—è']) {
        message += `üöô *–ö–ª–∞—Å—Å –∞–≤—Ç–æ:* ${data['–ö–ª–∞—Å—Å –∞–≤—Ç–æ–º–æ–±–∏–ª—è']}\n`;
    }
    
    if (data['–°—Ä–æ–∫ –∞—Ä–µ–Ω–¥—ã']) {
        message += `üìÖ *–°—Ä–æ–∫:* ${data['–°—Ä–æ–∫ –∞—Ä–µ–Ω–¥—ã']}\n`;
    }
    
    if (data['–ú–∞—Ä–∫–∞ –∏ –º–æ–¥–µ–ª—å']) {
        message += `üöó *–ú–∞—Ä–∫–∞ –∏ –º–æ–¥–µ–ª—å:* ${data['–ú–∞—Ä–∫–∞ –∏ –º–æ–¥–µ–ª—å']}\n`;
    }
    
    if (data['–°—Ç—Ä–∞–Ω–∞ –ø–æ–∫—É–ø–∫–∏']) {
        message += `üåç *–°—Ç—Ä–∞–Ω–∞ –ø–æ–∫—É–ø–∫–∏:* ${data['–°—Ç—Ä–∞–Ω–∞ –ø–æ–∫—É–ø–∫–∏']}\n`;
    }
    
    if (data['–ë—é–¥–∂–µ—Ç (‚ÇΩ)']) {
        const budget = parseInt(data['–ë—é–¥–∂–µ—Ç (‚ÇΩ)']);
        message += `üí∞ *–ë—é–¥–∂–µ—Ç:* ${budget.toLocaleString('ru-RU')} ‚ÇΩ\n`;
    }
    
    if (data['–ú–∞–∫—Å. –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞']) {
        message += `üìÜ *–ú–∞–∫—Å. –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞:* ${data['–ú–∞–∫—Å. –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞']}\n`;
    }
    
    // –î–∞–Ω–Ω—ã–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –ª–∏–∑–∏–Ω–≥–∞
    if (data.carPrice) {
        message += `\nüí∞ *–†–∞—Å—á–µ—Ç –ª–∏–∑–∏–Ω–≥–∞:*\n`;
        message += `‚Ä¢ –°—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ: ${data.carPrice}\n`;
        message += `‚Ä¢ –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å: ${data.initialPayment}\n`;
        message += `‚Ä¢ –°—Ä–æ–∫: ${data.leaseTerm}\n`;
        message += `‚Ä¢ –ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂: ${data.monthlyPayment}\n`;
    }
    
    // –î–∞–Ω–Ω—ã–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –∞—Ä–µ–Ω–¥—ã
    if (data.carClass && data.rentalDays) {
        message += `\nüöó *–†–∞—Å—á–µ—Ç –∞—Ä–µ–Ω–¥—ã:*\n`;
        message += `‚Ä¢ –ö–ª–∞—Å—Å –∞–≤—Ç–æ: ${data.carClass}\n`;
        message += `‚Ä¢ –°—Ä–æ–∫: ${data.rentalDays}\n`;
        message += `‚Ä¢ –ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${data.basePrice}\n`;
        
        if (data.discount && data.discount !== '–ù–µ—Ç —Å–∫–∏–¥–∫–∏') {
            message += `‚Ä¢ –°–∫–∏–¥–∫–∞: ${data.discount}\n`;
        }
        
        if (data.additionalServices && data.additionalServices !== '–ù–µ—Ç' && data.additionalServices !== '0 ‚ÇΩ') {
            message += `‚Ä¢ –î–æ–ø. —É—Å–ª—É–≥–∏: ${data.additionalServices}\n`;
        }
        
        message += `‚Ä¢ *–ò—Ç–æ–≥–æ: ${data.totalPrice}*\n`;
    }
    
    // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    if (data.comment && data.comment.trim() && data.comment !== '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è') {
        message += `\nüìù *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* ${data.comment}\n`;
    }
    
    message += `\n‚è∞ *–í—Ä–µ–º—è:* ${timestamp}`;
    
    return message;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
function updateStats(data) {
    applicationStats.total++;
    applicationStats.today++;
    
    const serviceType = (data.service || '').toLowerCase();
    
    switch (serviceType) {
        case '–∞—Ä–µ–Ω–¥–∞':
            applicationStats.rental++;
            break;
        case '–ª–∏–∑–∏–Ω–≥':
            applicationStats.leasing++;
            break;
        case '–ø–æ–¥-–∫–ª—é—á':
            applicationStats.purchase++;
            break;
        case '–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è':
            applicationStats.consultation++;
            break;
    }
}

// ======================== ERROR HANDLERS ========================

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ Telegram –±–æ—Ç–∞
bot.on('error', (error) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ Telegram –±–æ—Ç–∞:', error);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
process.on('unhandledRejection', (reason, promise) => {
    console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–∏—Å–∞:', reason);
});

process.on('uncaughtException', (error) => {
    console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ:', error);
    process.exit(1);
});

// ======================== SERVER START ========================

const server = app.listen(PORT, () => {
    console.log('üöÄ =================================');
    console.log('ü§ñ Telegram Bot –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å–ª—É–≥');
    console.log('üöÄ =================================');
    console.log(`üì° –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É: ${PORT}`);
    console.log(`üåç API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${PORT}`);
    console.log(`üîß –†–µ–∂–∏–º: ${NODE_ENV}`);
    console.log(`üìÖ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: ${new Date().toLocaleString('ru-RU')}`);
    console.log('üöÄ =================================');
    
    if (NODE_ENV === 'development') {
        console.log('üí° –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤—å—Ç–µ POST –∑–∞–ø—Ä–æ—Å –Ω–∞:');
        console.log(`   http://localhost:${PORT}/api/application`);
    }
});

// Graceful shutdown
process.on('SIGTERM', () => {
    console.log('üì¥ –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...');
    server.close(() => {
        console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        process.exit(0);
    });
});

process.on('SIGINT', () => {
    console.log('\nüì¥ –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...');
    server.close(() => {
        console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        process.exit(0);
    });
});